#include <bits/stdc++.h>

std::vector<int> prefix_function(std::string const& s) {
    int n = (int)s.size();
    std::vector<int> pi(n, 0);
    for (int i = 1; i < n; i++) {
        int j = pi[i - 1];
        while (j > 0 and s[i] != s[j]) {
            j = pi[j - 1];
        }
        j += (s[i] == s[j]);
        pi[i] = j;
    }
}   

void compute_automation(std::string s, std::vector<std::vector<int>> &aut) {
    s += '#';
    int n = (int)s.size();
    std::vector<int> pi = prefix_function(s);
    aut.assign(n, std::vector<int> (26, 0));

    for (int i = 0; i < n; i++) {
        for (int c = 0; c < 26; c++) {
            if (i > 0 and 'a' + c != s[i]) {
                aut[i][c] = aut[pi[i - 1]][c];
            } else {
                aut[i][c] = i + ('a' + c == s[i]);
            }
        }
    }
}

int main() {}